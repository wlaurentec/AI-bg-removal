/**
 * Svix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RedshiftConfig } from './RedshiftConfig';
import { SinkPayloadFormat } from './SinkPayloadFormat';
import { SinkStatus } from './SinkStatus';
import { StreamSinkInOneOf } from './StreamSinkInOneOf';
import { StreamSinkInOneOf1 } from './StreamSinkInOneOf1';
import { StreamSinkInOneOf2 } from './StreamSinkInOneOf2';
import { StreamSinkInOneOf3 } from './StreamSinkInOneOf3';
import { StreamSinkInOneOf4 } from './StreamSinkInOneOf4';
import { StreamSinkInOneOf5 } from './StreamSinkInOneOf5';
import { StreamSinkInOneOf6 } from './StreamSinkInOneOf6';
import { HttpFile } from '../http/http';

export class StreamSinkOut {
    'batchSize': number;
    'createdAt': Date;
    'currentIterator'?: string;
    'disabledReason'?: string;
    'format': SinkPayloadFormat;
    'id': string;
    'maxWaitSecs': number;
    'status': SinkStatus;
    'uid'?: string;
    'updatedAt': Date;
    'config': RedshiftConfig;
    'type': StreamSinkOutTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "batchSize",
            "baseName": "batchSize",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "currentIterator",
            "baseName": "currentIterator",
            "type": "string",
            "format": ""
        },
        {
            "name": "disabledReason",
            "baseName": "disabledReason",
            "type": "string",
            "format": ""
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "SinkPayloadFormat",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxWaitSecs",
            "baseName": "maxWaitSecs",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "SinkStatus",
            "format": ""
        },
        {
            "name": "uid",
            "baseName": "uid",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "config",
            "baseName": "config",
            "type": "RedshiftConfig",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "StreamSinkOutTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StreamSinkOut.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type StreamSinkOutTypeEnum = "redshift" ;

