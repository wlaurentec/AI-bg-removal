/**
 * Svix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { KafkaSecurityProtocolType } from './KafkaSecurityProtocolType';
import { SinkInOneOf } from './SinkInOneOf';
import { SinkInOneOf1 } from './SinkInOneOf1';
import { SinkInOneOf2 } from './SinkInOneOf2';
import { SinkInOneOf3 } from './SinkInOneOf3';
import { URI } from './URI';
import { HttpFile } from '../http/http';

export class SinkIn {
    /**
    * List of message channels this sink listens to (omit for all)
    */
    'channels'?: Array<string>;
    'description'?: string;
    'disabled'?: boolean;
    'filterTypes'?: Array<string>;
    'metadata'?: { [key: string]: string; };
    'rateLimit'?: number;
    /**
    * The endpoint's verification secret. If `null` is passed, a secret is automatically generated. Format: `base64` encoded random bytes optionally prefixed with `whsec_`. Recommended size: 24.
    */
    'secret'?: string;
    /**
    * Optional unique identifier for the sink
    */
    'uid'?: string;
    'routingKey': string;
    'type': SinkInTypeEnum;
    'uri': string;
    'accessKey': string;
    'queueDsn': URI;
    'region': string;
    'secretKey': string;
    'brokers': string;
    /**
    * Password for SASL, if `security_protocol` is `sasl-ssl`.
    */
    'saslPassword'?: string;
    /**
    * Username for SASL, if `security_protocol` is `sasl-ssl`.
    */
    'saslUsername'?: string;
    'securityProtocol': KafkaSecurityProtocolType;
    'topic': string;
    'url': URI;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "channels",
            "baseName": "channels",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "disabled",
            "baseName": "disabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "filterTypes",
            "baseName": "filterTypes",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "rateLimit",
            "baseName": "rateLimit",
            "type": "number",
            "format": "uint16"
        },
        {
            "name": "secret",
            "baseName": "secret",
            "type": "string",
            "format": ""
        },
        {
            "name": "uid",
            "baseName": "uid",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingKey",
            "baseName": "routingKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "SinkInTypeEnum",
            "format": ""
        },
        {
            "name": "uri",
            "baseName": "uri",
            "type": "string",
            "format": ""
        },
        {
            "name": "accessKey",
            "baseName": "accessKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "queueDsn",
            "baseName": "queueDsn",
            "type": "URI",
            "format": "uri"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string",
            "format": ""
        },
        {
            "name": "secretKey",
            "baseName": "secretKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "brokers",
            "baseName": "brokers",
            "type": "string",
            "format": ""
        },
        {
            "name": "saslPassword",
            "baseName": "saslPassword",
            "type": "string",
            "format": ""
        },
        {
            "name": "saslUsername",
            "baseName": "saslUsername",
            "type": "string",
            "format": ""
        },
        {
            "name": "securityProtocol",
            "baseName": "securityProtocol",
            "type": "KafkaSecurityProtocolType",
            "format": ""
        },
        {
            "name": "topic",
            "baseName": "topic",
            "type": "string",
            "format": ""
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "URI",
            "format": "uri"
        }    ];

    static getAttributeTypeMap() {
        return SinkIn.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type SinkInTypeEnum = "http" ;

