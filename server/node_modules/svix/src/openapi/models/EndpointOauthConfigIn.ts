/**
 * Svix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClientSecretJwtParamsIn } from './ClientSecretJwtParamsIn';
import { Oauth2AuthMethodIn } from './Oauth2AuthMethodIn';
import { Oauth2GrantTypeIn } from './Oauth2GrantTypeIn';
import { URI } from './URI';
import { HttpFile } from '../http/http';

export class EndpointOauthConfigIn {
    'authMethod': Oauth2AuthMethodIn;
    /**
    * The client ID. Required for all authentication types.
    */
    'clientId': string;
    /**
    * Optional client secret. This is only used for `clientSecretBasic` and `clientSecretPost`.  For `clientSecretBasic`, the secret will be appended to the `Authorization` header. For `clientSecretPost`, this will be added to the body in a `client_secret` parameter.
    */
    'clientSecret'?: string;
    /**
    * Extra parameters added to the request body as key-value pairs.
    */
    'extraParams'?: { [key: string]: string; };
    'grantType': Oauth2GrantTypeIn;
    'jwtParams'?: ClientSecretJwtParamsIn;
    /**
    * For `refreshToken` grant type
    */
    'refreshToken'?: string;
    /**
    * Optional OAuth scopes added to the request body.
    */
    'scopes'?: Array<string>;
    /**
    * The URL of the authorization server.
    */
    'tokenUrl': URI;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "authMethod",
            "baseName": "authMethod",
            "type": "Oauth2AuthMethodIn",
            "format": ""
        },
        {
            "name": "clientId",
            "baseName": "clientId",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientSecret",
            "baseName": "clientSecret",
            "type": "string",
            "format": ""
        },
        {
            "name": "extraParams",
            "baseName": "extraParams",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "grantType",
            "baseName": "grantType",
            "type": "Oauth2GrantTypeIn",
            "format": ""
        },
        {
            "name": "jwtParams",
            "baseName": "jwtParams",
            "type": "ClientSecretJwtParamsIn",
            "format": ""
        },
        {
            "name": "refreshToken",
            "baseName": "refreshToken",
            "type": "string",
            "format": ""
        },
        {
            "name": "scopes",
            "baseName": "scopes",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "tokenUrl",
            "baseName": "tokenUrl",
            "type": "URI",
            "format": "uri"
        }    ];

    static getAttributeTypeMap() {
        return EndpointOauthConfigIn.attributeTypeMap;
    }
    
    public constructor() {
    }
}

