import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { CreateStreamIn } from '../models/CreateStreamIn';
import { EventStreamOut } from '../models/EventStreamOut';
export declare class SinkApiRequestFactory extends BaseAPIRequestFactory {
    v1StreamCreateEvents(streamId: string, createStreamIn: CreateStreamIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamEventsGet(streamId: string, limit?: number, iterator?: string, after?: Date, _options?: Configuration): Promise<RequestContext>;
}
export declare class SinkApiResponseProcessor {
    v1StreamCreateEvents(response: ResponseContext): Promise<any>;
    v1StreamEventsGet(response: ResponseContext): Promise<EventStreamOut>;
}
