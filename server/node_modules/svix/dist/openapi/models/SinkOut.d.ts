import { KafkaSecurityProtocolType } from './KafkaSecurityProtocolType';
import { URI } from './URI';
export declare class SinkOut {
    'channels'?: Array<string>;
    'createdAt': Date;
    'description': string;
    'disabled'?: boolean;
    'filterTypes'?: Array<string>;
    'id': string;
    'metadata': {
        [key: string]: string;
    };
    'rateLimit'?: number;
    'uid'?: string;
    'updatedAt': Date;
    'routingKey': string;
    'type': SinkOutTypeEnum;
    'uri': string;
    'accessKey': string;
    'queueDsn': URI;
    'region': string;
    'secretKey': string;
    'brokers': string;
    'saslPassword'?: string;
    'saslUsername'?: string;
    'securityProtocol': KafkaSecurityProtocolType;
    'topic': string;
    'url': URI;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare type SinkOutTypeEnum = "http";
