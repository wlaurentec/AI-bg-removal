import { RedshiftConfig } from './RedshiftConfig';
import { SinkPayloadFormat } from './SinkPayloadFormat';
import { SinkStatus } from './SinkStatus';
export declare class StreamSinkOut {
    'batchSize': number;
    'createdAt': Date;
    'currentIterator'?: string;
    'disabledReason'?: string;
    'format': SinkPayloadFormat;
    'id': string;
    'maxWaitSecs': number;
    'status': SinkStatus;
    'uid'?: string;
    'updatedAt': Date;
    'config': RedshiftConfig;
    'type': StreamSinkOutTypeEnum;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare type StreamSinkOutTypeEnum = "redshift";
